指数乱数をイベントを表す変数に代入して順序を決める？

指数乱数：return t * -log(1.0-r);
tには指数分布の平均、rには一様乱数

起こりうるイベント(マイニングと通知)
・miningA
・miningB
・miningC
・delayA_B
・delayA_C
・delayB_A
・delayB_C
・delayC_A
・delayC_B

miningイベントが発生すると対応した変数を1増やし、対応したキューに追加
通知イベントが発生すると、デキューする。通知相手と大小比較し、相手の方が小さければ書き換える
キューが空でない場合、通知イベントも競争に参加する

指数乱数で大小比較する（最小を取り出す）
通知に関して：lambda×個数、順番が前後する。どれが来るかは同じ確率なので1/個数
破棄される回数をカウント
キューじゃなくてセット、ハッシュテーブル

発表内容：解析むずすぎてできんかった。シミュレーションから考え直して

通知がたまっていた場合、その個数倍早く到着する。
どれが届くかは同じ確率なので、整数乱数でやってみる？

二人の時、シミュレーションが正しいか確認
誰がそのブロックを作ったかの情報を盛り込む

捨てられたものを拾われる可能性があるからダメ

難しいのはこれです！
全状態をとらないといけない

作られたブロックの数-現状の最長ブロックの数＝破棄された数？

いつブロックが作られたのかの情報がいる
いろんなパラメータで破棄された数を見てみる
二人の場合の確率を出してみる？
実行時間をはかる必要があるかも
再現性のあるシミュレーションをするためにシードを決めておくなど


begin
    処理
end

@time workblk

中間は最悪シミュレーションで。
卒論結果（解析）との比較もあり。

seedを一個に決めるのではなく固定したのちに1000回やる
平均とって平均からどれだけ離れてるのか
シミュレーションの信頼区間をとる

2peer3peerの比較
可能であればシミュレーションでいいので後ろに何個かつながった場合

後ろに何個つながっているかをとる

アブストは英語
スライドも英語

タイトル：A Study on Stale Block Probability in Blockchain

確認のために二人シミュレートしてるよ

分岐した後後続に一個つながった後破棄判定になった場合、分岐した直後のブロックは破棄数に含まれない可能性が高い

二人の場合と三人の場合
卒論も含めてよい
二人をまず最初に説明から三人になるとこうなります
三人の詳細を言われても困る
振る舞いは二人の方がわかりやすいため
予備スライドは日本語でいい
詳細はツッコミ待ち概略だけ説明
15枚程度でよい
モチベーションを明らかにするのこと
卒論をベースに
解析とシミュレーションを両方載せてどうしたいかの話
解析データをもとに信頼区間

見てわかるポスター体裁にすること
モデルの詳細はいらないけど、二人の時の振る舞い
振る舞いで手を抜かないこと（変化を詳細に記す）
長くても10分くらい目安
「個の振る舞いをマルコフ連鎖でモデル化しました」
状態数が多すぎで三人は無理だったのでシミュレートしました

どういうケースをなぜ評価したいのか

２が3の場合の必ず大きくなる、小さくなるが分かっていれば
二人で三人を近似で切る可能性が高いので、2の時のモデルを活用する
遅延が無視できるならとか考えておく
100人いたときに50:50の2ノードでわけて考えるとか
値が小さすぎてシミュレート無理なんで解析しまっす

パラメータをcase1,case2とかで書く

三人の場合はセクションを別にしてまとめる
1:1:1と1:2を比べる（シミュレーション）
グループのパラメータはレートを足したもの
遅延がどの程度小さければ近似できるか
最終目標は解析ではなく、1:1:1を1:2の近似ができるかどうかに落とし込む
「近似のためにシミュレーションをしましたよ」
3になったら難しくなるので～

・将来研究で三人の場合を触れる
・数値実験を三人のはできてるから、1:2のときと三人の時で近いものを作っておく（二者側の大きいものを使う、速度の速い遅延を採用する、平均をとるなど、比率とって重みをつける）

二人の時のシミュレーションも書かない
三人になると状態が増えますよ。三人以上の時を二人に落とし込みたい（FuterWorks）

三者の場合で、BC間の遅延を0に近づける
二人の時解析でマックスとかを示してそれより下ならOK的な
三人の時と二人でどういうときに近いのか。どうしたら高くなるOR低くなる
二人は解析したいなあ
上から抑える下から抑える

A vs B&C で考えるなら、BC間だけの遅延を下げていく
平均とったり
考えうるパターンを全部やる
（μλ両方に対して＝＞高いの・低いの・平均・足す）
winB,winCも考慮するとよくなるかもね（二段階解析）