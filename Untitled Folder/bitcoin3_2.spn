place A_A
place A_B
place A_C
place B_A
place B_B
place B_C
place C_A
place C_B
place C_C

place A0
place B0
place C0

place AandB
place BandC
place CandA
place AandBandC

place consensusAto_(init = 1)
place consensusBto_(init = 1)
place consensusCto_(init = 1)

exp TminingA (rate = muA)
exp TminingB (rate = muB)
exp TminingC (rate = muC)

exp TdelayA_B (rate = lambdaA, guard = #A_B < #B_B)
exp TdelayA_C (rate = lambdaA, guard = #A_C < #C_C)
exp TdelayB_A (rate = lambdaB, guard = #B_A < #A_A)
exp TdelayB_C (rate = lambdaB, guard = #B_C < #C_C)
exp TdelayC_A (rate = lambdaC, guard = #C_A < #A_A)
exp TdelayC_B (rate = lambdaC, guard = #C_B < #B_B)

arc TminingA to A_A
arc TminingB to B_B
arc TminingC to C_C

arc TdelayA_B to A_B
arc TdelayA_C to A_C
arc TdelayB_A to B_A
arc TdelayB_C to B_C
arc TdelayC_A to C_A
arc TdelayC_B to C_B

imm TconsensusAtoB (guard = #A_A < #A_B && #A_B >= #BandC){
    #A0 = #A_A;
    #A_A = #A_B;
    #AandB = #A_B;
    #CandA = 0;
}
imm TconsensusAtoB0 (guard = #A_A < #A_B && #A_B < #BandC){
    #A0 = #A_A;
    #A_A = #A_B;
    #CandA = 0;
}
imm TconsensusAtoC (guard = #A_A < #A_C && #A_C >= #BandC){
    #A0 = #A_A;
    #A_A = #A_C;
    #CandA = #A_C;
    #AandB = 0;
}
imm TconsensusAtoC0 (guard = #A_A < #A_C && #A_C < #BandC){
    #A0 = #A_A;
    #A_A = #A_C;
    #AandB = 0;
}
imm TconsensusBtoA (guard = #B_B < #B_A && #B_A >= #CandA){
    #B0 = #B_B;
    #B_B = #B_A;
    #AandB = #B_A;
    #BandC = 0;
}
imm TconsensusBtoA0 (guard = #B_B < #B_A && #B_A < #CandA){
    #B0 = #B_B;
    #B_B = #B_A;
    #BandC = 0;
}
imm TconsensusBtoC (guard = #B_B < #B_C && #B_C >= #CandA){
    #B0 = #B_B;
    #B_B = #B_C;
    #BandC = #B_C;
    #AandB = 0;
}
imm TconsensusBtoC0 (guard = #B_B < #B_C && #B_C < #CandA){
    #B0 = #B_B;
    #B_B = #B_C;
    #AandB = 0;
}
imm TconsensusCtoA (guard = #C_C < #C_A && #C_A >= #AandB){
    #C0 = #C_C;
    #C_C = #C_A;
    #CandA = #C_A;
    #BandC = 0;
}
imm TconsensusCtoA0 (guard = #C_C < #C_A && #C_A < #AandB){
    #C0 = #C_C;
    #C_C = #C_A;
    #BandC = 0;
}
imm TconsensusCtoB (guard = #C_C < #C_B && #C_B >= #AandB){
    #C0 = #C_C;
    #C_C = #C_B;
    #BandC = #C_B
    #CandA = 0;
}
imm TconsensusCtoB0 (guard = #C_C < #C_B && #C_B < #AandB){
    #C0 = #C_C;
    #C_C = #C_B;
    #CandA = 0;
}

arc consensusAto_ to TconsensusAtoB
arc consensusAto_ to TconsensusAtoB0
arc consensusAto_ to TconsensusAtoC
arc consensusAto_ to TconsensusAtoC0
arc consensusBto_ to TconsensusBtoA
arc consensusBto_ to TconsensusBtoA0
arc consensusBto_ to TconsensusBtoC
arc consensusBto_ to TconsensusBtoC0
arc consensusCto_ to TconsensusCtoA
arc consensusCto_ to TconsensusCtoA0
arc consensusCto_ to TconsensusCtoB
arc consensusCto_ to TconsensusCtoB0

arc TconsensusAtoB to consensusAto_
arc TconsensusAtoB0 to consensusAto_
arc TconsensusAtoC to consensusAto_
arc TconsensusAtoC0 to consensusAto_
arc TconsensusBtoA to consensusBto_
arc TconsensusBtoA0 to consensusBto_
arc TconsensusBtoC to consensusBto_
arc TconsensusBtoC0 to consensusBto_
arc TconsensusCtoA to consensusCto_
arc TconsensusCtoA0 to consensusCto_
arc TconsensusCtoB to consensusCto_
arc TconsensusCtoB0 to consensusCto_

muA = 1/10
muB = 1/1
muC = 1/1
lambdaA = 1/10
lambdaB = 1/0.1
lambdaC = 1/0.1
